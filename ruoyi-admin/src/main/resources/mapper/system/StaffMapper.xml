<?xml version="1.0" encoding="UTF-8" ?>
<!DOCTYPE mapper
PUBLIC "-//mybatis.org//DTD Mapper 3.0//EN"
"http://mybatis.org/dtd/mybatis-3-mapper.dtd">
<mapper namespace="com.ruoyi.system.mapper.StaffMapper">
    
    <resultMap type="Staff" id="StaffResult">
        <result property="staffname"    column="staffname"    />
        <result property="gender"    column="gender"    />
        <result property="tel"    column="tel"    />
        <result property="id"    column="id"    />
        <result property="depart"    column="depart"    />
        <result property="duties"    column="duties"    />
        <result property="role"    column="role"    />
        <result property="json"    column="json"    />
    </resultMap>

    <sql id="selectStaffVo">
        select staffname, gender, tel, id, depart, duties, role, json from staff
    </sql>

    <select id="selectStaffList" parameterType="Staff" resultMap="StaffResult">
        <include refid="selectStaffVo"/>
        <where>  
            <if test="staffname != null  and staffname != ''"> and staffname like concat('%', #{staffname}, '%')</if>
            <if test="gender != null  and gender != ''"> and gender = #{gender}</if>
            <if test="tel != null  and tel != ''"> and tel = #{tel}</if>
            <if test="depart != null  and depart != ''"> and depart = #{depart}</if>
            <if test="duties != null  and duties != ''"> and duties = #{duties}</if>
            <if test="role != null  and role != ''"> and role = #{role}</if>
            <if test="json != null  and json != ''"> and json = #{json}</if>
        </where>
    </select>
    
    <select id="selectStaffById" parameterType="Long" resultMap="StaffResult">
        <include refid="selectStaffVo"/>
        where id = #{id}
    </select>
        
    <insert id="insertStaff" parameterType="Staff" useGeneratedKeys="true" keyProperty="id">
        insert into staff
        <trim prefix="(" suffix=")" suffixOverrides=",">
            <if test="staffname != null">staffname,</if>
            <if test="gender != null">gender,</if>
            <if test="tel != null">tel,</if>
            <if test="id != null">id,</if>
            <if test="depart != null">depart,</if>
            <if test="duties != null">duties,</if>
            <if test="role != null">role,</if>
            <if test="json != null">json,</if>
         </trim>
        <trim prefix="values (" suffix=")" suffixOverrides=",">
            <if test="staffname != null">#{staffname},</if>
            <if test="gender != null">#{gender},</if>
            <if test="tel != null">#{tel},</if>
            <if test="id != null">#{id},</if>
            <if test="depart != null">#{depart},</if>
            <if test="duties != null">#{duties},</if>
            <if test="role != null">#{role},</if>
            <if test="json != null">#{json},</if>
         </trim>
    </insert>

    <update id="updateStaff" parameterType="Staff">
        update staff
        <trim prefix="SET" suffixOverrides=",">
            <if test="staffname != null">staffname = #{staffname},</if>
            <if test="gender != null">gender = #{gender},</if>
            <if test="tel != null">tel = #{tel},</if>
            <if test="depart != null">depart = #{depart},</if>
            <if test="duties != null">duties = #{duties},</if>
            <if test="role != null">role = #{role},</if>
            <if test="json != null">json = #{json},</if>
        </trim>
        where id = #{id}
    </update>

    <delete id="deleteStaffById" parameterType="Long">
        delete from staff where id = #{id}
    </delete>

    <delete id="deleteStaffByIds" parameterType="String">
        delete from staff where id in 
        <foreach item="id" collection="array" open="(" separator="," close=")">
            #{id}
        </foreach>
    </delete>

</mapper>